// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String           @id @default(uuid())
  name     String
  email    String           @unique
  password String?
  profile  ExtendedProfile?
  posts    Post[]
  messages Message[]
  likes    Like[]
  replies  Reply[]
  comments Comment[]
}

model ExtendedProfile {
  id       Int    @id @default(autoincrement())
  user     User   @relation(fields: [userId], references: [id])
  userId   String @unique
  bio      String?
  imageUrl String?
}

model Post {
  id        Int       @id @default(autoincrement())
  author    User      @relation(fields: [authorId], references: [id])
  authorId  String
  title     String
  body      String
  url       String?
  timeStamp DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  likes     Like[]
  comments  Comment[]
}

model Message {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  body      String
  timeStamp DateTime @default(now())
  replies   Reply[]
}

model Reply {
  id        Int      @id @default(autoincrement())
  body      String
  message   Message  @relation(fields: [messageId], references: [id])
  messageId Int
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  timeStamp DateTime @default(now())
}

model Like {
  id     Int    @id @default(autoincrement())
  post   Post   @relation(fields: [postId], references: [id])
  postId Int
  user   User   @relation(fields: [userId], references: [id])
  userId String
  status Boolean
}

model Comment {
  id        Int      @id @default(autoincrement())
  body      String
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int      @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  timeStamp DateTime @default(now())
}
